{"version":3,"sources":["file:///Users/mac/Desktop/222/testProject/assets/scripts/Main.ts"],"names":["_decorator","Color","Component","EditBox","instantiate","Label","Node","Sprite","Tween","tween","UIOpacity","v3","ccclass","property","Main","type","_sche","matrix","colors","twoSubject","a","b","v","sort","aa","bb","i","length","j","onLoad","start","console","log","showBtnAnimation","nodeBtn","setScale","stopAllByTarget","to","scale","easing","call","union","repeatForever","onClickBtn","update","deltaTime","editBoxReturn","editBox","editBoxX","Number","editBoxY","str","getComponent","string","isAllNumber","error","showToast","regex","test","createColorArray","xPercent","yPercent","idx","getRandomInt","probabilities","getProbabilities","randomColor","drawMatrix","nodeParent","removeAllChildren","curColor","xx","yy","node","sprExample","active","parent","setPosition","color","m","n","x","y","baseProb","map","topColor","leftColor","topProbIndex","indexOf","leftProbIndex","totalProb","reduce","sum","prob","forEach","index","remainingProb","otherColorsCount","rand","Math","random","min","max","ceil","floor","labToast","opacity","unschedule","scheduleOnce"],"mappings":"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","sourcesContent":["import { _decorator, Button, Color, color, Component, EditBox, instantiate, Label, Node, Sprite, Tween, tween, UIOpacity, v3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\n// const colorArray = ['#FFFFFF', '#FF0000', '#00FF00', '#0000FF', '#FFFF00']\n\n@ccclass('Main')\nexport class Main extends Component {\n    @property({\n        type: Node\n    })\n    nodeBtn: Node = null;\n\n    @property({\n        type: Node\n    })\n    content: Node = null;\n\n    @property({\n        type: Node\n    })\n    editBoxX: Node = null;\n\n    @property({\n        type: Node\n    })\n    editBoxY: Node = null;\n\n    @property({\n        type: Label\n    })\n    labToast: Label = null;\n\n    @property({\n        type: Node\n    })\n    sprExample: Node = null;\n\n    @property({\n        type: Node\n    })\n    nodeParent: Node = null;\n\n    _sche = null;\n    matrix = [];\n    private colors: string[] = ['#FF0000', '#00FF00', '#0000FF', '#FFFF00', '#FF00FF']; // 5种颜色  \n\n\n    //第二题\n    twoSubject(a: number[], b: number[], v: number) {\n        a.sort((aa, bb) => { //a数组 从小到大排序\n            return aa - bb;\n        })\n        b.sort((aa, bb) => { //b数组 排序\n            return aa - bb;\n        })\n\n        for (let i = 0; i < a.length - 1; i++) {\n            if (a[i] <= v) { //当前值不大于v 再遍历b数组\n                for (let j = 0; j < b.length - 1; j++) {\n                    if (a[i] + b[i] === v) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n\n        //a和b数组先排序 降低时间复杂度  时间复杂度 nlogn < O < n^2\n    }\n\n\n    onLoad(): void {\n\n    }\n\n    start() {\n        console.log('===cocos===')\n\n        this.showBtnAnimation();\n    }\n\n    //第三题\n    showBtnAnimation() {\n        this.nodeBtn.setScale(0, 0, 1);\n        Tween.stopAllByTarget(this.nodeBtn);\n\n        tween(this.nodeBtn).to(0.2, { scale: v3(1.2, 1, 1) }, { easing: 'sineInOut' })\n            .to(0.2, { scale: v3(1.0, 1, 1) }, { easing: 'sineInOut' })\n            .call(() => {\n                tween(this.nodeBtn).to(0.6, { scale: v3(1.1, 1.0, 1) }, { easing: 'sineInOut' })\n                    .to(0.6, { scale: v3(1.0, 1, 1) }, { easing: 'sineInOut' })\n                    .union()\n                    .repeatForever()\n                    .start();\n            })\n            .start();\n    }\n\n    onClickBtn() {\n\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n    editBoxReturn(aa, bb) {\n        let editBox = this.editBoxX;\n        if (Number(aa) === 1) {\n            editBox = this.editBoxY;\n        }\n        const str = editBox.getComponent(EditBox).string;\n        if (!this.isAllNumber(str)) {\n            console.error('请输入纯数字')\n            this.showToast();\n        }\n\n    }\n\n    isAllNumber(str) {\n        //匹配全部由数字组成的字符串\n        const regex = /^\\d+$/;\n        return regex.test(str);\n    }\n\n    createColorArray() {\n        const xPercent = Number(this.editBoxX.getComponent(EditBox).string);\n        const yPercent = Number(this.editBoxY.getComponent(EditBox).string);\n\n        // 初始化矩阵\n        this.matrix = [];\n        for (let i = 0; i < 10; i++) {\n            this.matrix[i] = [];\n            for (let j = 0; j < 10; j++) {\n                this.matrix[i][j] = null;\n            }\n        }\n\n        // 设置初始点的颜色\n        const idx = this.getRandomInt(0, 4);\n        this.matrix[0][0] = this.colors[idx];\n\n        // 生成矩阵\n        for (let i = 0; i < 10; i++) {\n            for (let j = 0; j < 10; j++) {\n                if (i === 0 && j === 0) continue; // 已经设置了初始点\n                let probabilities = this.getProbabilities(i, j, xPercent, yPercent);\n                this.matrix[i][j] = this.randomColor(probabilities);\n            }\n        }\n\n        console.log(this.matrix);\n        // 绘制矩阵\n        this.drawMatrix();\n    }\n\n    drawMatrix() {\n        this.nodeParent.removeAllChildren();\n        //从左到右 从上到下\n\n        for (let i = 0; i < 10; i++) {\n            for (let j = 0; j < 10; j++) {\n                const curColor: string = this.matrix[i][j];\n\n                const xx = 0 + 60 * i;\n                const yy = 0 - 60 * j;\n\n                const node = instantiate(this.sprExample);\n                node.active = true;\n                node.parent = this.nodeParent;\n                node.setPosition(xx, yy);\n                node.getComponent(Sprite).color = new Color(curColor);\n            }\n        }\n    }\n\n    getProbabilities(m, n, x, y) {\n        const baseProb = 0.2; // 初始每个颜色的概率  \n        const probabilities = this.colors.map(() => baseProb);\n\n        // 获取上方和左方颜色  \n        let topColor = m > 0 ? this.matrix[m - 1][n] : null;\n        let leftColor = n > 0 ? this.matrix[m][n - 1] : null;\n\n        // 增加上方和左方颜色的概率  \n        if (topColor) {\n            const topProbIndex = this.colors.indexOf(topColor);\n            probabilities[topProbIndex] += x / 100;\n            if (leftColor === topColor) {\n                probabilities[topProbIndex] += (y - x) / 100;\n            }\n        }\n\n        if (leftColor) {\n            const leftProbIndex = this.colors.indexOf(leftColor);\n            probabilities[leftProbIndex] += x / 100;\n            if (topColor === leftColor) {\n                probabilities[leftProbIndex] += (y - x) / 100;\n            }\n        }\n\n\n        const totalProb = probabilities.reduce((sum, prob) => sum + prob, 0); //计算总和\n        probabilities.forEach((prob, index) => probabilities[index] = prob / totalProb);\n\n        // 其他颜⾊平分剩下的概率 \n        const remainingProb = 1 - probabilities.reduce((sum, prob) => sum + prob, 0);\n        if (remainingProb > 0) {\n            const otherColorsCount = this.colors.length - (topColor ? 1 : 0) - (leftColor ? 1 : 0) + (topColor === leftColor ? 1 : 0);\n            probabilities.forEach((prob, index: number) => {\n                if (!topColor || topColor !== this.colors[index]) {\n                    if (!leftColor || leftColor !== this.colors[index]) {\n                        probabilities[index] += remainingProb / otherColorsCount;\n                    }\n                }\n            });\n        }\n\n        return probabilities;\n    }\n\n    //随机出一个颜色\n    randomColor(probabilities: number[]): string {\n        const rand = Math.random();\n        let sum = 0;\n\n        // if (!probabilities) {\n        //     const idx = this.getRandomInt(0, 4);\n        //     return this.colors[idx];\n        // }\n\n        for (let i = 0; i < probabilities.length; i++) {\n            sum += probabilities[i];\n            if (rand < sum) {\n                console.log(i);\n                return this.colors[i];\n            }\n        }\n\n        return this.colors[this.colors.length - 1];  //颜色值\n    }\n\n    getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    showToast() {\n        this.labToast.string = '请输入纯数字';\n        this.labToast.node.getComponent(UIOpacity).opacity = 255;\n\n        if (this._sche) {\n            this.unschedule(this._sche);\n            this._sche = null;\n        }\n        this._sche = this.scheduleOnce(() => {\n            this.labToast.node.getComponent(UIOpacity).opacity = 0;\n        }, 1.0);\n\n\n    }\n\n\n}\n\n"]}